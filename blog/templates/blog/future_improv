Corey sir added title and content field in blog post. 
You can go and add an imagefield to your post model, something like this:
      
      thumbnail = models.ImageField(default='default.png', blank=True)

I have codes prepared with function based views. This is a snippet of my project, i compressed that enough so you can see this snippet in its simplest form:


def article_create(request):
    article_form = ArticleForm(request.POST or None, request.FILES or None)
    if article_form.is_valid():
        article_form.save()
    return render(request, 'blog/article-create.html', {'form': article_form})


make sure you write request.FILES so when user submit your blog post form with image, it gets the image.


and add 'enctype in your html template tag' 

<form action="." class="create-form" method="POST" enctype="multipart/form-data">


Show thumbnail in your post is same as showing title and content. you can simply add that in your post list view template, here is  a snippet of my template code here: 


<div class="article">
    <div class="article-list row" style="position:relative;">
        <div class="col-8">
            <a href="{{ article.slug }}">
                <h2>{{article.title}}</h2>
            </a>
            <span class="date">{{article.date }}</span>
            <span class="author">Author: {{article.author }}</span>
            <p>{{ article.snippet }} <a href="{{ article.slug }}/">read more</a></p>
        </div>
        <div class="article-list-thumbnail col-4">
            <img src="{{ article.thumbnail.url }}" alt="{{ article.thumbnail }}">
  # we have added that thumbnail in our code
        </div>
    </div>
</div>


if this didn't solve it! go to stackoverflow and ask a question or probably there must be someone how already asked this question.